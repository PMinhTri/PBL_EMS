// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  email       String     @unique
  password    String
  fullName    String?
  gender      String?
  dateOfBirth DateTime?
  phoneNumber String?
  address     String?
  city        String?
  citizenId   String?
  nationality String?
  status      String?
  avatar      String?
  education   Education? @relation(fields: [educationId], references: [id])

  jobInformation JobInformation?

  leave     LeaveRequest[]
  timeSheet TimeSheet[]
  payroll   Payroll[]

  roleId      String
  role        Role    @relation(fields: [roleId], references: [id])
  educationId String?

  isDeleted Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JobInformation {
  id                String         @id @default(uuid())
  userId            String         @unique
  user              User?          @relation(fields: [userId], references: [id])
  contractId        String?
  contractType      Contract?      @relation(fields: [contractId], references: [id])
  contractStartDate DateTime?
  contractEndDate   DateTime?
  joinDate          DateTime?
  employeeStatus    String?
  jobTitleId        String?
  jobTitle          JobTitle?      @relation(fields: [jobTitleId], references: [id])
  workingSkill      WorkingSkill[]
  departmentId      String?
  department        Department?    @relation(fields: [departmentId], references: [id])
  other             String?

  isDeleted Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model JobTitle {
  id             String           @id @default(uuid())
  name           String
  isDeleted      Boolean?         @default(false)
  JobInformation JobInformation[]
}

model WorkingSkill {
  id             String           @id @default(uuid())
  jobInformation JobInformation[]
  name           String

  isDeleted   Boolean? @default(false)
  description String?
}

model Department {
  id             String           @id @default(uuid())
  name           String
  isDeleted      Boolean          @default(false)
  JobInformation JobInformation[]
}

model TimeSheet {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  overtime    Boolean? @default(false)
  session     String
  hoursWorked Float
  status      String
  timeIn      String
  date        Int
  month       Int
  year        Int

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id   String @id @default(uuid())
  name String
  User User[]

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payroll {
  id          String  @id @default(uuid())
  userId      String
  user        User    @relation(fields: [userId], references: [id])
  month       Int
  year        Int
  basicSalary Float
  totalSalary Float
  additional  Float?
  status      String?

  isDeleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LeaveRequest {
  id          String     @id @default(uuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  session     String
  status      String
  leaveTypeId String?
  leaveType   LeaveType? @relation(fields: [leaveTypeId], references: [id])
  leaveDays   Float
  startDate   DateTime
  endDate     DateTime
  reason      String?
  isDeleted   Boolean?   @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model LeaveType {
  id      String         @id @default(uuid())
  name    String
  balance Float
  Leave   LeaveRequest[]
}

model Education {
  id    String @id @default(uuid())
  user  User[]
  grade String
}

model Contract {
  id             String           @id @default(uuid())
  type           String
  isDeleted      Boolean?         @default(false)
  JobInformation JobInformation[]
}
